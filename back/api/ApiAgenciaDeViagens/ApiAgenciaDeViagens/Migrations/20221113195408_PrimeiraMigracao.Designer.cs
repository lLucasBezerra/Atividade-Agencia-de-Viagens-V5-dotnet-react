// <auto-generated />
using System;
using ApiAgenciaDeViagens.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiAgenciaDeViagens.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221113195408_PrimeiraMigracao")]
    partial class PrimeiraMigracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataIda")
                        .HasColumnType("DATE")
                        .HasColumnName("dataIda");

                    b.Property<DateTime>("DataVolta")
                        .HasColumnType("DATE")
                        .HasColumnName("dataVolta");

                    b.Property<string>("Origem")
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("origem");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("ObraR")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("obraRelacionada");

                    b.Property<string>("Pais")
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("pais");

                    b.Property<int?>("PromocaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PromocaoId");

                    b.ToTable("Destinos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "Cinque-Terre",
                            ObraR = "Luca",
                            Pais = "Itália"
                        },
                        new
                        {
                            Id = 2,
                            Cidade = "París",
                            ObraR = "Ratatoulle",
                            Pais = "Itália"
                        },
                        new
                        {
                            Id = 3,
                            Cidade = "Sicília",
                            ObraR = "Poderoso Chefão",
                            Pais = "Itália"
                        },
                        new
                        {
                            Id = 4,
                            Cidade = "Condado de Down",
                            ObraR = "Game of Thrones",
                            Pais = "Irlanda"
                        },
                        new
                        {
                            Id = 5,
                            Cidade = "Atlanta",
                            ObraR = "Stranger Things",
                            Pais = "Georgia",
                            PromocaoId = 1
                        },
                        new
                        {
                            Id = 6,
                            Cidade = "Los Angeles",
                            ObraR = "Sitcoms em geral",
                            Pais = "Estados Unidos"
                        },
                        new
                        {
                            Id = 7,
                            Cidade = "Londres",
                            ObraR = "Sandman",
                            Pais = "Inglaterra",
                            PromocaoId = 2
                        });
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Escolha", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("vooId")
                        .HasColumnType("int");

                    b.HasKey("ClienteId", "DestinoId", "vooId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("vooId");

                    b.ToTable("Escolhas");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<sbyte>("Desconto")
                        .HasColumnType("TINYINT")
                        .HasColumnName("desconto");

                    b.Property<string>("NomePromo")
                        .HasColumnType("VARCHAR(25)")
                        .HasColumnName("nomePromocao");

                    b.HasKey("Id");

                    b.ToTable("Promocoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Desconto = (sbyte)20,
                            NomePromo = "Promo Inaugural"
                        },
                        new
                        {
                            Id = 2,
                            Desconto = (sbyte)35,
                            NomePromo = "Novo Destino"
                        },
                        new
                        {
                            Id = 3,
                            Desconto = (sbyte)40,
                            NomePromo = "Black Friday"
                        });
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Voo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanhiaA")
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("companhiaAerea");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("preco");

                    b.HasKey("Id");

                    b.ToTable("Voos");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Destino", b =>
                {
                    b.HasOne("ApiAgenciaDeViagens.Models.Promocao", "Promocao")
                        .WithMany("Destinos")
                        .HasForeignKey("PromocaoId");

                    b.Navigation("Promocao");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Escolha", b =>
                {
                    b.HasOne("ApiAgenciaDeViagens.Models.Cliente", "Cliente")
                        .WithMany("Escolhas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAgenciaDeViagens.Models.Destino", "Destino")
                        .WithMany("Escolhas")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAgenciaDeViagens.Models.Voo", "Voo")
                        .WithMany("Escolhas")
                        .HasForeignKey("vooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Destino");

                    b.Navigation("Voo");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Cliente", b =>
                {
                    b.Navigation("Escolhas");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Destino", b =>
                {
                    b.Navigation("Escolhas");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Promocao", b =>
                {
                    b.Navigation("Destinos");
                });

            modelBuilder.Entity("ApiAgenciaDeViagens.Models.Voo", b =>
                {
                    b.Navigation("Escolhas");
                });
#pragma warning restore 612, 618
        }
    }
}
